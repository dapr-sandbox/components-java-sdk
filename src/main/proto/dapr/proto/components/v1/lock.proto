/*
Copyright 2021 The Dapr Authors
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
    http://www.apache.org/licenses/LICENSE-2.0
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
syntax = "proto3";

package dapr.proto.components.v1;

import "google/protobuf/empty.proto";
import "dapr/proto/common/v1/common.proto";
import "dapr/proto/components/v1/shared.proto";

option go_package = "github.com/dapr/dapr/pkg/proto/components/v1;components";

// Store service provides a gRPC interface for secret store components.
service LockStore {
  rpc Init(MetadataRequest) returns (google.protobuf.Empty) {}

  rpc TryLock(TryLockRequest) returns (TryLockResponse) {}

  rpc Unlock(UnlockRequest) returns (UnlockResponse) {} 

}

message TryLockRequest {
  string resourceId = 1;
  string lockOwner = 2; 
  int32 expiryInSeconds = 3; 
}

message TryLockResponse {
  bool success = 1;
}

enum UnlockStatus {
  Success = 0;
  LockDoesNotExist = 1; 
  LockBelongsToOther = 2; 
  InternalError = 3;
}

message UnlockRequest {
  string resourceId = 1; 
  string lockOwner = 2; 
}
message UnlockResponse {
  UnlockStatus status = 1; 
}

